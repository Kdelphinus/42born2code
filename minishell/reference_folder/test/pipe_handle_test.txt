파이프 처리 확인 (cat | ls) 
다중도 cat | cat | ls로 확인 가능


이유:
ls가 실행되고 종료되고 나면 해당 파이프는 read end가 닫힌 상태가 됩니다. 그 파이프로부터 읽어오는 프로세스가 없는것이죠. 그 상태에서 cat 프로세스가 파이프에 쓰기를 시도하면 SIGPIPE 상황이 되어 cat 또한 종료됩니다.
실제로 bash에서 echo ${PIPESTATUS[@]} 로 확인해보시면 cat의 종료코드가 141인걸 확인할 수 있습니다. SIGPIPE가 13이고, 128 + 13 = 141이 반환되는 거라고 알고 있습니다.

